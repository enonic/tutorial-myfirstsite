<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.20">
<title>Tutorial: My first site</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/*! Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */
/* Uncomment the following line when using as a custom stylesheet */
/* @import "https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700"; */
html{font-family:sans-serif;-webkit-text-size-adjust:100%}
a{background:none}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
b,strong{font-weight:bold}
abbr{font-size:.9em}
abbr[title]{cursor:help;border-bottom:1px dotted #dddddf;text-decoration:none}
dfn{font-style:italic}
hr{height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
audio,video{display:inline-block}
audio:not([controls]){display:none;height:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=checkbox],input[type=radio]{padding:0}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,::before,::after{box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"Noto Serif","DejaVu Serif",serif;line-height:1;position:relative;cursor:auto;-moz-tab-size:4;-o-tab-size:4;tab-size:4;word-wrap:anywhere;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:0}
p{line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #dddddf;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight:400;color:rgba(0,0,0,.9)}
ul,ol,dl{line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}
ul,ol{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ul.square{list-style-type:square}
ul.circle ul:not([class]),ul.disc ul:not([class]),ul.square ul:not([class]){list-style:inherit}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:1px solid #dedede;word-wrap:normal}
table thead,table tfoot{background:#f7f8f7}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}
table tr.even,table tr.alt{background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.center{margin-left:auto;margin-right:auto}
.stretch{width:100%}
.clearfix::before,.clearfix::after,.float-group::before,.float-group::after{content:" ";display:table}
.clearfix::after,.float-group::after{clear:both}
:not(pre).nobreak{word-wrap:normal}
:not(pre).nowrap{white-space:nowrap}
:not(pre).pre-wrap{white-space:pre-wrap}
:not(pre):not([class^=L])>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background:#f7f7f8;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed}
pre{color:rgba(0,0,0,.9);font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;line-height:1.45;text-rendering:optimizeSpeed}
pre code,pre pre{color:inherit;font-size:inherit;line-height:inherit}
pre>code{display:block}
pre.nowrap,pre.nowrap pre{white-space:pre;word-wrap:normal}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background:#f7f7f7;border:1px solid #ccc;border-radius:3px;box-shadow:0 1px 0 rgba(0,0,0,.2),inset 0 0 0 .1em #fff;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menuref{color:#000}
.menuseq b:not(.caret),.menuref{font-weight:inherit}
.menuseq{word-spacing:-.02em}
.menuseq b.caret{font-size:1.25em;line-height:.8}
.menuseq i.caret{font-weight:bold;text-align:center;width:.45em}
b.button::before,b.button::after{position:relative;top:-1px;font-weight:400}
b.button::before{content:"[";padding:0 3px 0 2px}
b.button::after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin:0 auto;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}
#header::before,#header::after,#content::before,#content::after,#footnotes::before,#footnotes::after,#footer::before,#footer::after{content:" ";display:table}
#header::after,#content::after,#footnotes::after,#footer::after{clear:both}
#content{margin-top:1.25em}
#content::before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #dddddf}
#header>h1:only-child,body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #dddddf;padding-bottom:8px}
#header .details{border-bottom:1px solid #dddddf;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:flex;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span::before{content:"\00a0\2013\00a0"}
#header .details br+span.author::before{content:"\00a0\22c5\00a0";color:rgba(0,0,0,.85)}
#header .details br+span#revremark::before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber::after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #dddddf;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}
#toc{border-bottom:1px solid #e7e7e9;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:none}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
#toc.toc2{margin-top:0!important;background:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #e7e7e9;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e7e7e9;left:auto;right:0}}
@media screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border:1px solid #e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:none;background:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:hsla(0,0%,100%,.8);line-height:1.44}
#content{margin-bottom:.625em}
.sect1{padding-bottom:.625em}
@media screen and (min-width:768px){#content{margin-bottom:1.25em}
.sect1{padding-bottom:1.25em}}
.sect1:last-child{padding-bottom:0}
.sect1+.sect1{border-top:1px solid #e7e7e9}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor::before,h2>a.anchor::before,h3>a.anchor::before,#toctitle>a.anchor::before,.sidebarblock>.content>.title>a.anchor::before,h4>a.anchor::before,h5>a.anchor::before,h6>a.anchor::before{content:"\00A7";font-size:.85em;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}
details,.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}
details{margin-left:1.25rem}
details>summary{cursor:pointer;display:block;position:relative;line-height:1.6;margin-bottom:.625rem;outline:none;-webkit-tap-highlight-color:transparent}
details>summary::-webkit-details-marker{display:none}
details>summary::before{content:"";border:solid transparent;border-left:solid;border-width:.3em 0 .3em .5em;position:absolute;top:.5em;left:-1.25rem;transform:translateX(15%)}
details[open]>summary::before{border:solid transparent;border-top:solid;border-width:.5em .3em 0;transform:translateY(15%)}
details>summary::after{content:"";width:1.25rem;height:1em;position:absolute;top:.3em;left:-1.25rem}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1rem;font-style:italic}
table.tableblock.fit-content>caption.title{white-space:nowrap;width:0}
.paragraph.lead>p,#preamble>.sectionbody>[class=paragraph]:first-of-type p{font-size:1.21875em;line-height:1.6;color:rgba(0,0,0,.85)}
.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sans","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #dddddf;color:rgba(0,0,0,.6);word-wrap:anywhere}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border:1px solid #e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;border-radius:4px}
.sidebarblock{border:1px solid #dbdbd6;margin-bottom:1.25em;padding:1.25em;background:#f3f3f2;border-radius:4px}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:first-child,.sidebarblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child,.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}
.literalblock pre,.listingblock>.content>pre{border-radius:4px;overflow-x:auto;padding:1em;font-size:.8125em}
@media screen and (min-width:768px){.literalblock pre,.listingblock>.content>pre{font-size:.90625em}}
@media screen and (min-width:1280px){.literalblock pre,.listingblock>.content>pre{font-size:1em}}
.literalblock pre,.listingblock>.content>pre:not(.highlight),.listingblock>.content>pre[class=highlight],.listingblock>.content>pre[class^="highlight "]{background:#f7f7f8}
.literalblock.output pre{color:#f7f7f8;background:rgba(0,0,0,.9)}
.listingblock>.content{position:relative}
.listingblock code[data-lang]::before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:inherit;opacity:.5}
.listingblock:hover code[data-lang]::before{display:block}
.listingblock.terminal pre .command::before{content:attr(data-prompt);padding-right:.5em;color:inherit;opacity:.5}
.listingblock.terminal pre .command:not([data-prompt])::before{content:"$"}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;border-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.prettyprint{background:#f7f7f8}
pre.prettyprint .linenums{line-height:1.45;margin-left:2em}
pre.prettyprint li{background:none;list-style-type:inherit;padding-left:0}
pre.prettyprint li code[data-lang]::before{opacity:1}
pre.prettyprint li:not(:first-child) code[data-lang]::before{display:none}
table.linenotable{border-collapse:separate;border:0;margin-bottom:0;background:none}
table.linenotable td[class]{color:inherit;vertical-align:top;padding:0;line-height:inherit;white-space:normal}
table.linenotable td.code{padding-left:.75em}
table.linenotable td.linenos,pre.pygments .linenos{border-right:1px solid;opacity:.35;padding-right:.5em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}
pre.pygments span.linenos{display:inline-block;margin-right:.75em}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock:not(.excerpt)>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote::before{content:"\201c";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.75em;margin-right:.5ex;text-align:right}
.verseblock{margin:0 1em 1.25em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans-serif;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract blockquote::before,.quoteblock.excerpt blockquote::before,.quoteblock .quoteblock blockquote::before{display:none}
.quoteblock.abstract blockquote,.quoteblock.abstract p,.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{line-height:1.6;word-spacing:0}
.quoteblock.abstract{margin:0 1em 1.25em;display:block}
.quoteblock.abstract>.title{margin:0 0 .375em;font-size:1.15em;text-align:center}
.quoteblock.excerpt>blockquote,.quoteblock .quoteblock{padding:0 0 .25em 1em;border-left:.25em solid #dddddf}
.quoteblock.excerpt,.quoteblock .quoteblock{margin-left:0}
.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{color:inherit;font-size:1.0625rem}
.quoteblock.excerpt .attribution,.quoteblock .quoteblock .attribution{color:inherit;font-size:.85rem;text-align:left;margin-right:0}
p.tableblock:last-child{margin-bottom:0}
td.tableblock>.content{margin-bottom:1.25em;word-wrap:anywhere}
td.tableblock>.content>:last-child{margin-bottom:-1.25em}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all>*>tr>*{border-width:1px}
table.grid-cols>*>tr>*{border-width:0 1px}
table.grid-rows>*>tr>*{border-width:1px 0}
table.frame-all{border-width:1px}
table.frame-ends{border-width:1px 0}
table.frame-sides{border-width:0 1px}
table.frame-none>colgroup+*>:first-child>*,table.frame-sides>colgroup+*>:first-child>*{border-top-width:0}
table.frame-none>:last-child>:last-child>*,table.frame-sides>:last-child>:last-child>*{border-bottom-width:0}
table.frame-none>*>tr>:first-child,table.frame-ends>*>tr>:first-child{border-left-width:0}
table.frame-none>*>tr>:last-child,table.frame-ends>*>tr>:last-child{border-right-width:0}
table.stripes-all>*>tr,table.stripes-odd>*>tr:nth-of-type(odd),table.stripes-even>*>tr:nth-of-type(even),table.stripes-hover>*>tr:hover{background:#f8f8f7}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}
ul.checklist,ul.none,ol.none,ul.no-bullet,ol.no-bullet,ol.unnumbered,ul.unstyled,ol.unstyled{list-style-type:none}
ul.no-bullet,ol.no-bullet,ol.unnumbered{margin-left:.625em}
ul.unstyled,ol.unstyled{margin-left:0}
li>p:empty:only-child::before{content:"";display:inline-block}
ul.checklist>li>p:first-child{margin-left:-1em}
ul.checklist>li>p:first-child>.fa-square-o:first-child,ul.checklist>li>p:first-child>.fa-check-square-o:first-child{width:1.25em;font-size:.8em;position:relative;bottom:.125em}
ul.checklist>li>p:first-child>input[type=checkbox]:first-child{margin-right:.25em}
ul.inline{display:flex;flex-flow:row wrap;list-style:none;margin:0 0 .625em -1.25em}
ul.inline>li{margin-left:1.25em}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
td.hdlist2{word-wrap:anywhere}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist td:not([class]):first-child{padding:.4em .75em 0;line-height:1;vertical-align:top}
.colist td:not([class]):first-child img{max-width:none}
.colist td:not([class]):last-child{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:4px solid #fff;box-shadow:0 0 0 1px #ddd}
.imageblock.left{margin:.25em .625em 1.25em 0}
.imageblock.right{margin:.25em 0 1.25em .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em;border-width:1px 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none;margin-left:-1.05em}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background:#00fafa}
.black{color:#000}
.black-background{background:#000}
.blue{color:#0000bf}
.blue-background{background:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background:#fa00fa}
.gray{color:#606060}
.gray-background{background:#7d7d7d}
.green{color:#006000}
.green-background{background:#007d00}
.lime{color:#00bf00}
.lime-background{background:#00fa00}
.maroon{color:#600000}
.maroon-background{background:#7d0000}
.navy{color:#000060}
.navy-background{background:#00007d}
.olive{color:#606000}
.olive-background{background:#7d7d00}
.purple{color:#600060}
.purple-background{background:#7d007d}
.red{color:#bf0000}
.red-background{background:#fa0000}
.silver{color:#909090}
.silver-background{background:#bcbcbc}
.teal{color:#006060}
.teal-background{background:#007d7d}
.white{color:#bfbfbf}
.white-background{background:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background:#fafa00}
span.icon>.fa{cursor:default}
a span.icon>.fa{cursor:inherit}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note::before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip::before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning::before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution::before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important::before{content:"\f06a";color:#bf0000}
.conum[data-value]{display:inline-block;color:#fff!important;background:rgba(0,0,0,.8);border-radius:50%;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]::after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt,summary{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,td.hdlist1,span.alt,summary{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}
.exampleblock>.content{background:#fffef7;border-color:#e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@page{margin:1.25cm .75cm}
@media print{*{box-shadow:none!important;text-shadow:none!important}
html{font-size:80%}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^="#"],a[href^="mailto:"]{text-decoration:none!important}
a[href^="http:"]:not(.bare)::after,a[href^="https:"]:not(.bare)::after{content:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left:.25em}
abbr[title]{border-bottom:1px dotted}
abbr[title]::after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#header,#content,#footnotes,#footer{max-width:none}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #dddddf!important;padding-bottom:0!important}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em}
body.book #header .details{border:0!important;display:block;padding:0!important}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span::before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}
.listingblock code[data-lang]::before{display:block}
#footer{padding:0 .9375em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
@media amzn-kf8,print{#header>h1:first-child{margin-top:1.25rem}
.sect1{padding:0!important}
.sect1+.sect1{border:0}
#footer{background:none}
#footer-text{color:rgba(0,0,0,.6);font-size:.9em}}
@media amzn-kf8{#header,#content,#footnotes,#footer{padding:0}}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body class="article toc2 toc-right">
<div id="header">
<h1>Tutorial: My first site</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#introduction">Introduction</a></li>
<li><a href="#install_enonic_cli">Install Enonic CLI</a></li>
<li><a href="#create_a_sandbox">Create a sandbox</a></li>
<li><a href="#create_app">Create app</a></li>
<li><a href="#project_structure">Project structure</a></li>
<li><a href="#building_and_deploying">Building and Deploying</a></li>
<li><a href="#install_content_studio">Install Content Studio</a></li>
<li><a href="#sample_content">Sample content</a></li>
<li><a href="#content_types">Content Types</a></li>
<li><a href="#pages">Pages</a>
<ul class="sectlevel2">
<li><a href="#page_component">Page component</a></li>
<li><a href="#create_page">Create page</a></li>
</ul>
</li>
<li><a href="#regions">Regions</a></li>
<li><a href="#parts">Parts</a></li>
<li><a href="#configurable_part">Configurable part</a></li>
<li><a href="#page_templates">Page Templates</a>
<ul class="sectlevel2">
<li><a href="#toggle_template">Toggle template</a></li>
</ul>
</li>
<li><a href="#static_assets">Static assets</a>
<ul class="sectlevel2">
<li><a href="#perfect_cache">Perfect cache</a></li>
<li><a href="#lib_static">Lib static</a></li>
</ul>
</li>
<li><a href="#go_online">Go Online</a></li>
<li><a href="#appendix">Appendix</a>
<ul class="sectlevel2">
<li><a href="#setting_up_vhosts">Setting up vhosts</a></li>
<li><a href="#adding_more_apps">Adding more apps</a></li>
<li><a href="#logging">Logging</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="content">
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>A step-by-step introduction to building websites with the Enonic JS framework.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
If you are primarily looking to use Enonic&#8217;s headless API, visit <a href="https://developer.enonic.com/docs/intro">the intro tutorial</a> instead.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="introduction"><a class="link" href="#introduction">Introduction</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>During this exercise you will:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>set up a local Enonic developer environment</p>
</li>
<li>
<p>create an Enonic app</p>
</li>
<li>
<p>install and use Content Studio</p>
</li>
<li>
<p>learn about the structure of an Enonic app</p>
</li>
<li>
<p>learn about content types</p>
</li>
<li>
<p>set up pages and parts</p>
</li>
<li>
<p>use page templates</p>
</li>
<li>
<p>manage static assets</p>
</li>
<li>
<p>and then some&#8230;&#8203;</p>
</li>
</ul>
</div>
<div class="imageblock">
<div class="content">
<img src="media/ready-set-code.svg" alt="Ready&#8230;&#8203;Set&#8230;&#8203;Code!" width="720px">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="install_enonic_cli"><a class="link" href="#install_enonic_cli">Install Enonic CLI</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Command Line Interface is an essential tool for developers.</p>
</div>
<div class="paragraph">
<p>If you have <code>npm</code> on your device, run this command:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>npm install -g @enonic/cli</pre>
</div>
</div>
<div class="paragraph">
<p>If not, here are some <a href="https://developer.enonic.com/start" target="_blank" rel="noopener">alternative ways to install Enonic CLI</a></p>
</div>
<div class="paragraph">
<p>To verify that the CLI has been installed, run <code>enonic -v</code>. This should output the version of your installed CLI.</p>
</div>
<div class="paragraph">
<p>To see all available options, simply run <code>enonic</code>.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
To upgrade, use <code>enonic latest</code>. If there are new versions you will see instructions on how to upgrade.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="create_a_sandbox"><a class="link" href="#create_a_sandbox">Create a sandbox</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>A sandbox is a local developer instance of our platform - Enonic XP. Create a sandbox by running this command in your terminal:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>enonic sandbox create</pre>
</div>
</div>
<div class="paragraph">
<p>Give it a name, i.e. <code>myfirstsite</code>, and select the most recent version of Enonic XP from the list that appears.</p>
</div>
<div class="paragraph">
<p>Start the sandbox with this command:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>enonic sandbox start --dev</pre>
</div>
</div>
<div class="paragraph">
<p>Select the <code>intro</code> sandbox from the list, and it will boot up in development mode.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Dev mode will automatically load changes in your code when developing.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="create_app"><a class="link" href="#create_app">Create app</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>From a <strong>new terminal window</strong>, run the following command to create the application.</p>
</div>
<div class="admonitionblock important">
<table>
<tr>
<td class="icon">
<i class="fa icon-important" title="Important"></i>
</td>
<td class="content">
Use the default options when prompted.
</td>
</tr>
</table>
</div>
<div class="literalblock">
<div class="content">
<pre>enonic project create -r tutorial-myfirstsite</pre>
</div>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
<div class="paragraph">
<p>The command uses the <a href="https://github.com/enonic/tutorial-myfirstsite" target="_blank" rel="noopener">My first site</a> Github repo  as a starter (template) for the app.</p>
</div>
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="project_structure"><a class="link" href="#project_structure">Project structure</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The project folder created should now contain a basic app structure, looking something like this:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-files" data-lang="files">build.gradle <i class="conum" data-value="1"></i><b>(1)</b>
settings.gradle
build/ <i class="conum" data-value="2"></i><b>(2)</b>
code-samples/ <i class="conum" data-value="3"></i><b>(3)</b>
docs/ <i class="conum" data-value="4"></i><b>(4)</b>
src/
  main/
    resources/
      import/ <i class="conum" data-value="5"></i><b>(5)</b>
      assets/ <i class="conum" data-value="6"></i><b>(6)</b>
      sites/
        content-types/ <i class="conum" data-value="7"></i><b>(7)</b>
          country/
          city/
        parts/ <i class="conum" data-value="8"></i><b>(8)</b>
        pages/ <i class="conum" data-value="9"></i><b>(9)</b></code></pre>
</div>
</div>
<div class="colist arabic">
<table>
<tr>
<td><i class="conum" data-value="1"></i><b>1</b></td>
<td>gradle files are used by the app build system</td>
</tr>
<tr>
<td><i class="conum" data-value="2"></i><b>2</b></td>
<td>Contains output files produced by the build</td>
</tr>
<tr>
<td><i class="conum" data-value="3"></i><b>3</b></td>
<td>Code samples that will be used in this tutorial</td>
</tr>
<tr>
<td><i class="conum" data-value="4"></i><b>4</b></td>
<td>Contains the documentation you are reading now</td>
</tr>
<tr>
<td><i class="conum" data-value="5"></i><b>5</b></td>
<td>Contains sample content that is imported when the app starts</td>
</tr>
<tr>
<td><i class="conum" data-value="6"></i><b>6</b></td>
<td>Location for static assets</td>
</tr>
<tr>
<td><i class="conum" data-value="7"></i><b>7</b></td>
<td>Two pre-defined content types, country and city</td>
</tr>
<tr>
<td><i class="conum" data-value="8"></i><b>8</b></td>
<td>Part components - used to compose pages</td>
</tr>
<tr>
<td><i class="conum" data-value="9"></i><b>9</b></td>
<td>Page components - root component for pages</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="building_and_deploying"><a class="link" href="#building_and_deploying">Building and Deploying</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Assuming you did not change the default directory name <code>myproject/</code> when creating the app - build and deploy the app with the following commands:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>cd myproject
enonic project deploy</pre>
</div>
</div>
<div class="paragraph">
<p>Select the <code>myfirstsite</code> sandbox from the list, and the app will use this from now on.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Look for a line like this in the sandbox log to verify that the app has started:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>2019-04-09 13:40:40,765 INFO ... Application [com.example.myproject] installed successfully</pre>
</div>
</div>
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="install_content_studio"><a class="link" href="#install_content_studio">Install Content Studio</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p><a href="https://market.enonic.com/vendors/enonic/content-studio" target="_blank" rel="noopener">Content Studio</a> is the editorial interface used to create and manage content. It is not a part of the core platform, but as you will see soon, it can easily be installed from <a href="https://market.enonic.com" target="_blank" rel="noopener">Enonic Market</a>.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><strong>Open the sandbox admin</strong>: <a href="http://localhost:8080/admin" target="_blank" rel="noopener">http://localhost:8080/admin</a> and click <code>Login without a user</code>. This will bring you to the Dashboard.</p>
</li>
<li>
<p><strong>Open the Applications app</strong> from the top right <code>XP menu &#8594; Applications</code>.</p>
<div class="imageblock">
<div class="content">
<img src="media/xp-menu-applications.png" alt="Go to Applications from the XP menu" width="319px">
</div>
</div>
</li>
<li>
<p><strong>Install Content Studio</strong>: click <code>Install</code> button in the menu bar, scroll down to <code>Content Studio</code> (or use search) in the list of apps that appears and click <code>Install</code> next to it.</p>
<div class="imageblock">
<div class="content">
<img src="media/install-content-studio.png" alt="Install the Content Studio app" width="760px">
</div>
</div>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="sample_content"><a class="link" href="#sample_content">Sample content</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>On the <code>Dashboard</code>, a Content Studio widget should now have appeared. It shows that we already have some sample content available.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="media/dashboard.png" alt="Install the Content Studio app" width="1024px">
</div>
</div>
<div class="paragraph">
<p>A content project called <code>My First Site</code> andthe sample content gets imported when you application was started the first time.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s have a closer look:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Open Content Studio, which is now available in <code>XP menu &#8594; Content Studio</code>.</p>
</li>
<li>
<p>Select the <code>My First Site</code> project when prompted, and you should now see the imported content.</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="media/imported-content.png" alt="Tree structure showing countries and cities in Content Studio" width="1024px">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="content_types"><a class="link" href="#content_types">Content Types</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Every content item has a specific a content type.</p>
</div>
<div class="paragraph">
<p>Enonic XP ships with a set of standard content types such as <code>Shortcut</code>, <code>Folder</code>, <code>Site</code> and a range of <code>Media Types</code> that handle different kind of files.</p>
</div>
<div class="paragraph">
<p>Additionally, an application may define custom content types.
In our case, the content types <code>Country</code> and <code>City</code> already exist in the application.</p>
</div>
<div class="paragraph">
<p>In Content Studio, the <code>City</code> content type looks something like this:</p>
</div>
<div class="imageblock">
<div class="content">
<img src="media/city-form.png" alt="Form for the city content type" width="1024px">
</div>
</div>
<div class="paragraph">
<p>The content type is defined in a file, looking like this:</p>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/content-types/city/city.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;content-type xmlns="urn:enonic:xp:model:1.0"&gt;
  &lt;display-name&gt;City&lt;/display-name&gt;
  &lt;description&gt;Place where many people live&lt;/description&gt;
  &lt;super-type&gt;base:structured&lt;/super-type&gt;
  &lt;form&gt;
    &lt;input type="ImageSelector" name="photo"&gt;
      &lt;label&gt;Photo&lt;/label&gt;
      &lt;occurrences minimum="0" maximum="1"/&gt;
    &lt;/input&gt;
    &lt;input type="TextLine" name="slogan"&gt;
      &lt;label&gt;City slogan&lt;/label&gt;
      &lt;occurrences minimum="0" maximum="1"/&gt;
    &lt;/input&gt;
    &lt;input type="Long" name="population"&gt;
      &lt;label&gt;Population&lt;/label&gt;
      &lt;occurrences minimum="1" maximum="1"/&gt;
      &lt;config&gt;
          &lt;min&gt;1&lt;/min&gt;
      &lt;/config&gt;
    &lt;/input&gt;
  &lt;/form&gt;
&lt;/content-type&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Visit these links for more information about <a href="https://developer.enonic.com/docs/xp/stable/cms/content-types" target="_blank" rel="noopener">Content types</a> and the <a href="https://developer.enonic.com/docs/xp/stable/cms/schemas" target="_blank" rel="noopener">schema system</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="pages"><a class="link" href="#pages">Pages</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>At the moment, we have some content, but no preview or rendering.
As a headless CMS, Enonic supports use 3rd party front-ends - but Enonic also has an an embedded JavaScript runtime, and a <a href="https://developer.enonic.com/docs/xp/stable/framework">JS framework</a>. This can be used to customize the platform, or, like in our case render pages for a website.</p>
</div>
<div class="paragraph">
<p>Pages are essentially composed from one or more components. Using the Enonic framework, each component will have a JavaScript controller which is responsible for rendering it.</p>
</div>
<div class="sect2">
<h3 id="page_component"><a class="link" href="#page_component">Page component</a></h3>
<div class="paragraph">
<p>The app includes a pre-defined page component.
In addition to the controller, this component also uses an html template - aka the view in the Model View Controller (MVC) pattern. They look like this:</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
The JavaScript controller file must use the same name as the component directory.
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/pages/hello/hello.js</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">const portal = require('/lib/xp/portal'); // Import the portal library
const thymeleaf = require('/lib/thymeleaf'); // Import the Thymeleaf library

// Handle the GET request
exports.get = function(req) {

    // Prepare the model that will be passed to the view
    const model = {
        displayName: portal.getContent().displayName
    };

    // Specify the template file to use
    const view = resolve('hello.html');

    // Return the merged view and model in the response object
    return {
        body: thymeleaf.render(view, model)
    };
};</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/pages/hello/hello.html</div>
<div class="content">
<pre class="highlight"><code class="language-HTML" data-lang="HTML">&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title data-th-text="${displayName}"&gt;Sample title&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1 data-th-text="${displayName} + ' - we made it!'"&gt;Sample header&lt;/h1&gt;
    &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
The view is plain HTML, but also uses a specific syntax known as the <a href="https://market.enonic.com/vendors/enonic/thymeleaf-lib" target="_blank" rel="noopener">Thymeleaf</a> templating language. The Enonic runtime also supports many other options, such as <a href="https://market.enonic.com/vendors/enonic/react4xp-lib" target="_blank" rel="noopener">React</a>, <a href="https://market.enonic.com/vendors/enonic/mustache-lib" target="_blank" rel="noopener">Mustache</a> and <a href="https://market.enonic.com/vendors/tineikt/freemarker-xp-library" target="_blank" rel="noopener">Freemarker</a>
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="create_page"><a class="link" href="#create_page">Create page</a></h3>
<div class="paragraph">
<p>To actually have the <code>hello</code> page component render something, it must be mapped to a content item:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Select the site content <code>Hello World</code> and click <b class="button">edit</b></p>
</li>
<li>
<p>From the preview panel on the right, select the <code>Hello</code> page component in the list. Your changes will automatically save, and the page preview will render the result.</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="media/hello-world.gif" alt="Demonstrating the process of setting up a page" width="1024px">
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="regions"><a class="link" href="#regions">Regions</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Content Studio&#8217;s page editor also supports adding more components to a page, using drag&#8217;n drop.</p>
</div>
<div class="paragraph">
<p>To support this, the page component must define one or more regions.</p>
</div>
<div class="paragraph">
<p>Complete the steps below to add a single region called <code>main</code> to the <code>hello</code> page component.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Start off by <strong>adding a component descriptor</strong>. The descriptor statically declares the region:</p>
<div class="listingblock">
<div class="title">src/main/resources/site/pages/hello/hello.xml</div>
<div class="content">
<pre class="highlight"><code class="language-XML" data-lang="XML">&lt;page xmlns="urn:enonic:xp:model:1.0"&gt;
  &lt;display-name&gt;Hello Regions!&lt;/display-name&gt;
  &lt;description&gt;Drag'n drop enabled&lt;/description&gt;
  &lt;form/&gt;
  &lt;regions&gt;
    &lt;region name="main"/&gt;
  &lt;/regions&gt;
&lt;/page&gt;</code></pre>
</div>
</div>
</li>
<li>
<p><strong>Update your controller and view</strong> with the code below to support the new region:</p>
<div class="listingblock">
<div class="title">src/main/resources/site/pages/hello/hello.js</div>
<div class="content">
<pre class="highlight"><code class="language-js" data-lang="js">var portal = require('/lib/xp/portal'); // Import the portal library
var thymeleaf = require('/lib/thymeleaf'); // Import the Thymeleaf library

// Handle the GET request
exports.get = function(req) {

    // Get the content that is using the page
    var content = portal.getContent();

    // Prepare the model that will be passed to the view
    var model = {
      displayName: portal.getContent().displayName,
      mainRegion: content.page.regions.main
    }

    // Specify the view file to use
    var view = resolve('hello.html');

    // Return the merged view and model in the response object
    return {
        body: thymeleaf.render(view, model)
    }
};</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/pages/hello/hello.html:</div>
<div class="content">
<pre class="highlight"><code class="language-HTML" data-lang="HTML">&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title data-th-text="${displayName}"&gt;Sample title&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;header&gt;
      &lt;h1 data-th-text="${displayName} + ' - with regions'"&gt;Sample header&lt;/h1&gt;
    &lt;/header&gt;
    &lt;main data-portal-region="main"&gt;
        &lt;div data-th-if="${mainRegion}" data-th-each="component : ${mainRegion.components}" data-th-remove="tag"&gt;
            &lt;div data-portal-component="${component.path}" data-th-remove="tag"&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/main&gt;
    &lt;footer&gt;My first site - powered by Enonic&lt;/footer&gt;  
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Your sandbox should automatially pickup the changes, as we are running in dev mode.</p>
</div>
</li>
<li>
<p>Back in Content Studio, select, and <strong>edit one of the contry content items</strong>.</p>
</li>
<li>
<p>Activate the page editor (from the top right monitor icon) and select the <code>Hello</code> component.</p>
<div class="imageblock">
<div class="content">
<img src="media/hello-regions.gif" alt="Setting up a page with a region" width="1024px">
</div>
</div>
</li>
</ol>
</div>
<div class="paragraph">
<p>You now have a page with a region. Try adding a text component to the region. It is available from the right hand side as drag-n-drop, or by using the right click menu.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="parts"><a class="link" href="#parts">Parts</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>You&#8217;re now ready to present some more information from the <strong>Country</strong> content type.</p>
</div>
<div class="paragraph">
<p>Rather than making another page component, let&#8217;s create a <code>part</code>. Parts are essentially components that can be added to regions.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Create the folder <code>src/main/resources/site/parts/country/</code> in your project.</p>
</li>
<li>
<p>Add the part controller and view files below to the folder:</p>
<div class="listingblock">
<div class="title">src/main/resources/site/parts/country/country.js</div>
<div class="content">
<pre class="highlight"><code class="language-js" data-lang="js">var portal = require('/lib/xp/portal');
var thymeleaf = require('/lib/thymeleaf');

// Handle the GET request
exports.get = function(req) {

    // Get the country content as a JSON object
    var content = portal.getContent();

    // Prepare the model object with the needed data from the content
    var model = {
        name: content.displayName,
        population: content.data.population || "Unknown",
        description: content.data.description || "Missing description",
    };

    // Specify the view file to use
    var view = resolve('country.html');

    // Return the merged view and model in the response object
    return {
        body: thymeleaf.render(view, model)
    }
};</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/parts/country/country.html</div>
<div class="content">
<pre class="highlight"><code class="language-HTML" data-lang="HTML">&lt;div&gt;
    &lt;div data-th-if="${population}" data-th-text="'Population: ' + ${population}"&gt;5 gazillions&lt;/div&gt;
    &lt;div data-th-if="${description}" data-th-text="${description}"&gt;Nice city indeed&lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</li>
<li>
<p>When done, the part can be added to the page by drag&#8217;n dropping a part component from the right-hand-side, then select the <code>Country</code> component from the list.</p>
<div class="imageblock">
<div class="content">
<img src="media/country-part.gif" alt="Inserting the new country part" width="1024px">
</div>
</div>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="configurable_part"><a class="link" href="#configurable_part">Configurable part</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Let&#8217;s try something slightly more advanced.</p>
</div>
<div class="paragraph">
<p>In this task, you&#8217;ll add a new part that does the following:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Lists cities within a country.</p>
</li>
<li>
<p>Supports configuation for image cropping format</p>
</li>
<li>
<p>Includes a real-time cropped image of each city</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Complete the steps below to try it out:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Create the <code>City list</code> part by adding the controller and view files:</p>
<div class="listingblock">
<div class="title">src/main/resources/site/parts/city-list/city-list.js</div>
<div class="content">
<pre class="highlight"><code class="language-js" data-lang="js">var contentLib = require('/lib/xp/content');
var portal = require('/lib/xp/portal');
var thymeleaf = require('/lib/thymeleaf');

// Specify the view file to use
const view = resolve('city-list.html');

// Handle the GET request
exports.get = function (req) {

    // Get the part configuration for the map
    const config = portal.getComponent().config;
    const countryPath = portal.getContent()._path;
    const componentPath = portal.getComponent().path;

    // Get all child item cities's  
    const result = contentLib.query({
        start: 0,
        count: 100,
        contentTypes: [
            app.name + ':city'
        ],
        query: "_path LIKE '/content" + countryPath + "/*'",
        sort: "modifiedTime DESC"
    });

    const cities = [];

    // Create a crop based on configuration
    const crop = config.crop || 'ORIGINAL';
    let scale; 
    if (crop == 'SQUARE') { scale = 'square(1080)'}
    else if (crop == 'WIDESCREEN') { scale = 'block(1080,300)'}
    else { scale = 'width(1080)'}

    if (result.hits.length &gt; 0) {

        // Loop through the contents and extract the needed data
        result.hits.forEach((item)=&gt;{

            const city = {};
            city.name = item.displayName;
            city.photo = item.data.photo ? portal.imageUrl({
                id: item.data.photo,
                scale: scale,
            }) : null;
            const population = item.data.population ? 'population: ' + item.data.population : '';
            city.caption = [item.data.slogan, population].filter(Boolean).join(' - ');
            cities.push(city);

        })
    }

    // Specify the view file to use
    const model = {cities};
    log.info('Model object %s', JSON.stringify(model, null, 4));

    // Return the response object
    return {
        body: thymeleaf.render(view, model)
    };
};</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/parts/city-list/city-list.html</div>
<div class="content">
<pre class="highlight"><code class="language-HTML" data-lang="HTML">&lt;div class="cities" style="min-height:100px;"&gt;
    &lt;h2&gt;Cities&lt;/h2&gt;
    &lt;p data-th-if="${#lists.isEmpty(cities)}"&gt;No cities found&lt;/p&gt;
    &lt;div data-th-unless="${#lists.isEmpty(cities)}" class="city" data-th-each="city : ${cities}"&gt;
        &lt;h3 data-th-text="${city.name}"&gt;Utopia&lt;/h3&gt;
        &lt;figure&gt;
            &lt;img data-th-if="${city.photo}" data-th-src="${city.photo}"/&gt;
            &lt;figcaption data-th-if="${city.caption}" data-th-text="${city.caption}"&gt;Best city every&lt;/figcaption&gt;
        &lt;/figure&gt;
        &lt;br/&gt;
    &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</li>
<li>
<p>This time, also add a component descriptor.
This descriptor includes a form (similar to a content type). The form allow editors to configure the part, once it is placed on the page.</p>
<div class="listingblock">
<div class="title">src/main/resources/site/parts/city-list/city-list.xml</div>
<div class="content">
<pre class="highlight"><code class="language-XML" data-lang="XML">&lt;part xmlns="urn:enonic:xp:model:1.0"&gt;
  &lt;display-name&gt;City list&lt;/display-name&gt;
  &lt;description&gt;Show all cities in a country&lt;/description&gt;
  &lt;form&gt;
    &lt;input type="ComboBox" name="crop"&gt;
      &lt;label&gt;Image crop&lt;/label&gt;
      &lt;occurrences minimum="0" maximum="1"/&gt;
      &lt;config&gt;
        &lt;option value="ORIGINAL"&gt;Original&lt;/option&gt;
        &lt;option value="WIDESCREEN"&gt;Widescreen&lt;/option&gt;
        &lt;option value="SQUARE"&gt;Square&lt;/option&gt;
      &lt;/config&gt;
    &lt;/input&gt;
  &lt;/form&gt;
&lt;/part&gt;</code></pre>
</div>
</div>
</li>
<li>
<p>Add the new part to the page you created earlier.</p>
</li>
<li>
<p>Finally, configure the part by selecting it and changing the settings in the right hand panel.</p>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
The controller is also configured to log model passed to the view, check sandbox log after visiting a country page to see what is happening.
</td>
</tr>
</table>
</div>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="media/config-part.gif" alt="Add city list to page and configure it to show widescreen images" width="1024px">
</div>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
The images are scaled and cropped in real-time by the <a href="https://developer.enonic.com/docs/xp/stable/runtime/engines/site-engine/image-service" target="_blank" rel="noopener">Image service</a>. The part controller uses the <code>imageUrl()</code> function to create a link to the desired image.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="page_templates"><a class="link" href="#page_templates">Page Templates</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>With our current approach, you would have to configure a new page for every country in the list. A slightly more efficient approach is to use page templates.</p>
</div>
<div class="paragraph">
<p>By creating a page template, and map it to a specific content types, all items of this type - i.e. countries - will be rendered by the page template.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s create a page template from the country page you just made:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Edit the country page made in the previous step, in the visual editor - select the page and choose "Save as Page template" from the right hand component panel.</p>
</li>
<li>
<p>A new browser tab will open with the new template. Rename it and save.</p>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
The <code>Supports</code> field defines which content type(s) the template will apply to.
</td>
</tr>
</table>
</div>
<div class="imageblock">
<div class="content">
<img src="media/page-template.gif" alt="Creating a page template from the country page" width="1024px">
</div>
</div>
</li>
</ol>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Try clicking the other countries to verify that the template actually works as intended.
</td>
</tr>
</table>
</div>
<div class="sect2">
<h3 id="toggle_template"><a class="link" href="#toggle_template">Toggle template</a></h3>
<div class="paragraph">
<p>Your originally edited country still uses the custom page you created - you can change it to use the new page template as well.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Edit the initial country, open the page editor and select the page.</p>
</li>
<li>
<p>From the right hand component view, change the "Template" setting from "Custom" to "Automatic"</p>
</li>
</ol>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
For each content item, you can select a specific template, or customize the presentation at any time.
</td>
</tr>
</table>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="static_assets"><a class="link" href="#static_assets">Static assets</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>So far, the site is made up of dynamic HTML and images.
Let&#8217;s have a look at how to handle static assets like graphics, CCS and JavaScript files.</p>
</div>
<div class="paragraph">
<p>Enonic supports an "out-of-the-box" solution for this through the <a href="https://developer.enonic.com/docs/xp/stable/runtime/engines/asset-service">Asset service</a>.
By simply placing files in the <code>src/resources/assets</code> folder - they are instantly available on a specific URL.</p>
</div>
<div class="paragraph">
<p>Your application already includes the sample asset <code>assets/mvp.css</code>.
Let&#8217;s put it to work by adding the CSS to the page component:</p>
</div>
<div class="paragraph">
<p><strong>Update your page component view</strong> with the following content:</p>
</div>
<div class="listingblock">
<div class="title">src/main/resources/site/pages/hello/hello.html</div>
<div class="content">
<pre class="highlight"><code class="language-HTML" data-lang="HTML">&lt;!DOCTYPE html&gt;
&lt;html color-mode="user"&gt;
  &lt;head&gt;
    &lt;title data-th-text="${displayName}"&gt;Sample title&lt;/title&gt;
    &lt;link rel="stylesheet" data-th-href="${portal.assetUrl({'_path=mvp.css'})}" href="../assets/mvp.css" type="text/css" media="all"/&gt;    
  &lt;/head&gt;
  &lt;body&gt;
    &lt;header&gt;
      &lt;h1 data-th-text="${displayName} + ' - with regions'"&gt;Sample header&lt;/h1&gt;
    &lt;/header&gt;
    &lt;main data-portal-region="main"&gt;
        &lt;div data-th-if="${mainRegion}" data-th-each="component : ${mainRegion.components}" data-th-remove="tag"&gt;
            &lt;div data-portal-component="${component.path}" data-th-remove="tag"&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/main&gt;
    &lt;footer&gt;My first site - powered by Enonic&lt;/footer&gt;  
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>There are only two changes in this file, one line that includes the css file, and a small attribute on the html element to activate dark mode support.</p>
</div>
<div class="paragraph">
<p>If you&#8217;re using <code>dark mode</code>, the result will look something like this:</p>
</div>
<div class="imageblock">
<div class="content">
<img src="media/css.png" alt="Countries page in dark mode after adding the css" width="1024px">
</div>
</div>
<div class="sect2">
<h3 id="perfect_cache"><a class="link" href="#perfect_cache">Perfect cache</a></h3>
<div class="paragraph">
<p>In production, every asset will include cache headers that allow CDNs and browsers to cache it - and never need to download it again.</p>
</div>
<div class="paragraph">
<p>How does it work?
The generated asset URL will contain a prefix based on a signature of the files in the app. The signature will change with every new version of the app.
The <code>portal.assetUrl()</code> function uses this signature when generating the URL, ensuring that clients always get the most recent version.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
When running in dev mode (like you do now), cache headers are deactivated
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="lib_static"><a class="link" href="#lib_static">Lib static</a></h3>
<div class="paragraph">
<p>If you&#8217;re using advanced build-tools like Webpack, assets may be chunked and served incrementally. Changing the URL to <strong>all</strong> assets for every re-deploy is no longer optimal.</p>
</div>
<div class="paragraph">
<p>For this purpose, you can take full control over asset serving by adding <a href="https://market.enonic.com/vendors/enonic/static-asset-lib" target="_blank" rel="noopener">Lib static</a> to your app.</p>
</div>
<div class="paragraph">
<p>We will not go into details in this tutorial, but lib-static is pre-bundled with selected app starters like <a href="https://market.enonic.com/vendors/enonic/webpack-starter" target="_blank" rel="noopener">Webpack Starter</a> and <a href="https://market.enonic.com/vendors/enonic/react4xp-starter" target="_blank" rel="noopener">React4XP starter</a>.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="go_online"><a class="link" href="#go_online">Go Online</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Now that the setup of <code>Hello World</code> site is completed, it&#8217;s time to publish.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Select the <code>Hello World</code> site in the content browse panel</p>
</li>
<li>
<p>Select <strong>Publish Tree</strong> from the top right action menu. The <strong>Publishing Wizard</strong> will now appear</p>
</li>
<li>
<p>Several <code>In progress</code> items are blocking publishing - click <code>Mark as ready</code> to fix this.</p>
</li>
<li>
<p>click <strong>Publish</strong>!</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="media/publish.gif" alt="Demonstrating how to publish all items in the project" width="1024px">
</div>
</div>
<div class="paragraph">
<p>What just happened? In Content Studio, you work in the draft branch. When publishing, the selected items are merged from <strong>draft</strong> to the <strong>master</strong> branch</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
You can see the published site and the master branch on this url: <code><a href="http://localhost:8080/site/myfirstsite/master/hello-world" class="bare">http://localhost:8080/site/myfirstsite/master/hello-world</a></code>.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p><strong>Well done!</strong></p>
</div>
<div class="literalblock">
<div class="content">
<pre>🎉 Congratulations on building your first Enonic site - The Enonic team.</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="appendix"><a class="link" href="#appendix">Appendix</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Below are some nice to know features and tricks:</p>
</div>
<div class="sect2">
<h3 id="setting_up_vhosts"><a class="link" href="#setting_up_vhosts">Setting up vhosts</a></h3>
<div class="paragraph">
<p>If you want to go live on a production server, you will need to configure a vhost.
Vhosts map the internal XP URI to a public facing URL i.e. mydomain.com &#8594; /site/default/master/hello-world.</p>
</div>
<div class="paragraph">
<p>Read more about <a href="https://developer.enonic.com/docs/xp/stable/deployment/config#vhost">vhost configuration</a> in the XP docs.</p>
</div>
</div>
<div class="sect2">
<h3 id="adding_more_apps"><a class="link" href="#adding_more_apps">Adding more apps</a></h3>
<div class="paragraph">
<p>A site can be created from a single app, but you may also add more.
<a href="https://market.enonic.com/vendors/enonic/seo-metafields" target="_blank" rel="noopener">SEO Meta Fields</a>, <a href="https://market.enonic.com/vendors/enonic/com.enonic.app.google.tagmanager" target="_blank" rel="noopener">Google Tag Manager</a> and <a href="https://market.enonic.com/vendors/enonic/siteimprove" target="_blank" rel="noopener">Siteimprove</a> are just a few of the many apps that can instantly add new features to your site.</p>
</div>
<div class="paragraph">
<p>To add an app, install an app from the <code>XP menu &#8594; Applications</code> app.
Once installed, edit your site and add the application to the list of linked apps.</p>
</div>
</div>
<div class="sect2">
<h3 id="logging"><a class="link" href="#logging">Logging</a></h3>
<div class="paragraph">
<p>While developing an app, it can be helpful to see the structure of objects returned by library functions.</p>
</div>
<div class="paragraph">
<p>A way to do this is by creating up a small utility script.</p>
</div>
<div class="listingblock">
<div class="title">src/main/resources/lib/utilities.js</div>
<div class="content">
<pre class="highlight"><code class="language-js" data-lang="js">exports.log = function (data) {
  log.info('Utilities log %s', JSON.stringify(data, null, 4));
};</code></pre>
</div>
</div>
<div class="paragraph">
<p>Then, call the log function in any controller like the example below and then check the log after refreshing the page.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-js" data-lang="js">var util = require('utilities');

var content = portal.getContent();
util.log(content);</code></pre>
</div>
</div>
<div class="paragraph">
<p>This function and many more are included in the <a href="https://market.enonic.com/vendors/enonic/util-lib">Util Library</a></p>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2023-12-19 09:40:57 UTC
</div>
</div>
</body>
</html>